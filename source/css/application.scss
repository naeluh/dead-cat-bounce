@import url('https://fonts.googleapis.com/css?family=Heebo:900|Inconsolata');
@import url('https://fonts.googleapis.com/css?family=Heebo:900|Inconsolata');
body {
    overflow: hidden;
    margin: 0px;
    width: 100vw;
    height: 100vh;
    background: -webkit-gradient(linear, left top, left bottom, from(#ef31f9), to(rgba(125, 185, 232, 0)));
    background: linear-gradient(180deg, #ef31f9, rgba(125, 185, 232, 0));
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#ef31f9", endColorstr="#007db9e8", GradientType=0)
}

body,
html {
    height: 100vh;
    width: 100vw;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    overflow: hidden;
    font-family: sans-serif;
}

.modal {
    display: none;
    position: fixed;
    z-index: 1;
    padding-top: 100px;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgb(0, 0, 0);
    /* Fallback color */
    background-color: rgba(0, 0, 0, 0.5);
    /* Black w/ opacity */
}

.modal-content {
    position: relative;
    text-align: center;
    margin: 0 auto;
    text-align: center;
    background-color: #fefefe;
    padding: 0;
    border: 1px solid black;
    width: 80%;
    box-shadow: 4px 4px 0px rgba(0, 0, 0, 1);
    -webkit-animation-name: animatetop;
    -webkit-animation-duration: 0.4s;
    animation-name: animatetop;
    animation-duration: 0.4s
}

@-webkit-keyframes animatetop {
    from {
        top: -300px;
        opacity: 0
    }
    to {
        top: 0;
        opacity: 1
    }
}

@keyframes animatetop {
    from {
        top: -300px;
        opacity: 0
    }
    to {
        top: 0;
        opacity: 1
    }
}

.close {
    color: black;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: #666;
    text-decoration: none;
    cursor: pointer;
}

.modal-header {
    padding: 0px 16px;
    font-family: 'Heebo', sans-serif;
    text-transform: uppercase;
    background-color: #fefefe;
    color: #000;
    margin-bottom: 15px;
}

h3 {
    font-family: 'Heebo', sans-serif;
    font-size: 1.4rem;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.15rem;
    text-align: center;
}

.modal-body {
    font-family: 'Inconsolata', monospace;
    margin: 0 auto;
    padding: 8px 16px;
    font-size: 0.9rem;
    color: #000;
    background-color: #fefefe;
}

a.site:link {
    color: #000;
    text-decoration: none;
    border-bottom: 1px solid #000;
}

a.site:visited {
    color: #000;
    text-decoration: none;
    border-bottom: 1px solid #000;
}

a.site:hover {
    color: #000;
    text-decoration: none;
    border-bottom: 1px solid rgba(255, 255, 255, 0);
}

.modal-footer {
    font-family: 'Inconsolata', monospace;
    padding: 8px 16px;
    background-color: #fefefe;
    color: #000;
    font-size: 0.9rem;
}

.btn {
    position: fixed;
    top: 0;
    margin: 0.5rem;
    -webkit-appearance: none;
    border: none;
    outline: none;
    padding: 5px 5px;
    cursor: pointer;
    background: none;
    color: #fff;
    font-family: 'Heebo', sans-serif;
    text-transform: uppercase;
    letter-spacing: 0.10rem;
    font-size: 1.0rem;
    text-shadow: 3px 3px 1px rgba(0, 0, 0, 0.2);
    font-weight: normal;
}

.outline {
    position: fixed;
    top: 0;
    margin: 0.7rem;
    -webkit-appearance: none;
    border: 3px solid #FFF;
    outline: none;
    padding: 0px 10px;
    cursor: pointer;
    background: none;
    color: #FFF;
    font-family: 'Heebo', sans-serif;
    text-transform: uppercase;
    letter-spacing: 0rem;
    font-size: 1.7rem;
    text-shadow: 2px 2px 1px rgba(0, 0, 0, 0.2);
    font-weight: normal;
}

#makeItRain {
    right: 0;
    cursor: pointer;
}

#questions {
    cursor: pointer;
    left: 0;
}

#questions:hover {
    opacity: 0.5;
    cursor: pointer;
    left: 0;
}

#wobble {
    top: 0;
    left: 40px;
    cursor: default;
    letter-spacing: 0.20rem;
    display: none;
}

/* SMARTPHONES LANDSCAPE */

@media only screen and (min-width: 414px) {
    .btn {
        font-size: 1.4rem;
        padding: 5px 10px;
        margin: 1rem;
        letter-spacing: 0.15rem;
        font-weight: normal;
        text-shadow: 3px 3px 1px rgba(0, 0, 0, 0.2);
    }
    #wobble {
        top: 0;
        left: 40px;
        cursor: default;
        letter-spacing: 0.20rem;
        display: block;
    }
    .modal-content {
        position: relative;
        text-align: center;
        background-color: #fefefe;
        margin: 0 auto;
        padding: 0;
        border: 1px solid black;
        width: 60%;
        box-shadow: 4px 4px 0px rgba(0, 0, 0, 1);
        -webkit-animation-name: animatetop;
        -webkit-animation-duration: 0.4s;
        animation-name: animatetop;
        animation-duration: 0.4s
    }
}

/*
 * Animation module with all animation code
 */

.anim-text-flow,
.anim-text-flow-hover:hover {
    /*
   * Animation variables
   */
    $animationSteps: 250;
    $animationDuration: 10;
    $animationElement: span;
    $animationElementsCount: 100;
    $delayBetweenLetters: 0.1;
    /*
   * Elements settings
   */
    #{$animationElement} {
        animation-name: anim-text-flow-keys;
        animation-duration: #{$animationDuration}s;
        animation-iteration-count: infinite;
        animation-direction: alternate;
        animation-fill-mode: forwards;
    }
    /*
   * Keyframe loop
   */
    @keyframes anim-text-flow-keys {
        @for $i from 0 through $animationSteps {
            #{percentage($i * (1 / $animationSteps))} {
                color: hsla(random(365), 88, 60, 1);
            }
        }
    }
    /*
   * Element animation delay loop
   */
    $totalDelayTime: $animationElementsCount * $delayBetweenLetters;
    @for $i from 1 through $animationElementsCount {
        #{$animationElement}:nth-of-type(#{$i}) {
            animation-delay: #{($i * $delayBetweenLetters) - $totalDelayTime}s;
        }
    }
}